{
  "COMP316": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "This course, part of the HRC\u2019s Digital Humanities Initiative, is devoted to the virtual reconstruction of ancient urban landscapes with focus on individual buildings in their urban settings. All course activities will be based around interdisciplinary student teams who will work together through the semesters to complete a virtual reconstruction project. Cross-list: ANTH 346, HART 316, ARCH 310.", 
    "cid": "COMP316", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "VIRTUAL RECONSTRUCTION OF HISTORICAL CITIES"
  }, 
  "COMP221": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This course introduces computer systems from the programmer's perspective. Topics include data representation, the compilation process, and system-level programming concepts such as interrupts and concurrency. ", 
    "cid": "COMP221", 
    "minUnits": 4, 
    "prereqs": ["COMP215"], 
    "semesters": [
      "Fall"
    ], 
    "name": "INTRODUCTION TO COMPUTER SYSTEMS"
  }, 
  "COMP405": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "COMP 405 is a topics-driven exploration of cutting-edge object oriented design issues and concepts including mutable recursive data frameworks, design patterns for sorting, parsing and games, service-oriented architectures and cloud computing. Detailed knowledge and practice in abstract structure and behavioral representations, delegation model programming, design patterns and Java are required. ", 
    "cid": "COMP405", 
    "minUnits": 4, 
    "prereqs": [
      "COMP310"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "ADVANCED TOPICS IN OBJECT-ORIENTED DESIGN"
  }, 
  "COMP435": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "This multidisciplinary course will consider how elections are conducted to enhance participation, to accurately measure the will of the electorate, and to be sufficiently rigorous to convince all parties that the results are legitimate. This course will consider the design and evaluation of election technologies, ranging from voter registration through the polling booth and vote tabulation. This course will consider three questions: how do individual voters interact with the voting technology, how are voting technologies engineered to be accurate and secure, and how do the social aspects of voting fulfill democratic goals for elections? A central requirement for this course will be group research projects, many operating in our community, built around the November election. Cross-list: POLI 420, PSYC 420.", 
    "cid": "COMP435", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "ELECTION SYSTEMS, TECHNOLOGIES, AND ADMINISTRATION"
  }, 
  "COMP527": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This class will focus on computer security in real systems.  We will cover theory and practice for the design of secure systems (formal modeling, hardware and compiler-enforced safety, software engineering processes, tamper-resistant and tamper-reactive hardware, firewalls, cryptography, and more).  Recommended Prerequisite(s): (COMP 311 or COMP 412) and (COMP 421 or COMP 429).", 
    "cid": "COMP527", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "COMPUTER SYSTEMS SECURITY"
  }, 
  "COMP412": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Topics in the design of programming language translators, including parsing, run-time storage management, error recovery, code generation and optimization. ", 
    "cid": "COMP412", 
    "minUnits": 4, 
    "prereqs": [
      "COMP221", 
      "COMP310"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "COMPILER CONSTRUCTION"
  }, 
  "COMP440": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This is a foundational course in artificial intelligence, the discipline of designing intelligent agents. That course will cover the design and analysis of agents that do the right thing in the face of limited information and computational resources. The course revolves around two main questions: how agents decide what to do, and how they learn from experience. Tools from computer science, probability theory, and game theory will be used. Interesting examples of intelligent agents will be covered, including poker playing programs, bots for various games (e.g. WoW), DS1 -- the spacecraft that performed an autonomous flyby of Comet Borrely in 2001, Stanley -- the Stanford robot car that won the Darpa Grand Challenge, Google Maps and how it calculates driving directions, face and handwriting recognizers, Fedex package delivery planners, airline fare prediction sites, and fraud detectors in financial transactions. Cross-list: ELEC 440.", 
    "cid": "COMP440", 
    "minUnits": 4, 
    "prereqs": [
      "COMP310"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "ARTIFICIAL INTELLIGENCE"
  }, 
  "COMP424": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "ELEC 424 introduces mobile and embedded system design and applications to undergraduate students and provides them hands-on design experience. It consists of three interlearning parts: lectures, student project, and student presentations. Cross-list: ELEC 424.", 
    "cid": "COMP424", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "MOBILE AND EMBEDDED SYSTEM DESIGN AND APPLICATION"
  }, 
  "COMP425": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Evolution of key architecture concepts found in advanced uniprocessor systems. Fundamental and advanced pipelining techniques and associated issues for improving processor performance. Illustrated with RISC processors such as the ARM processor. Examine several metrics for processor performance, such as Amdahl\u2019s law. Key concepts of data and program memory systems found in modern systems with memory hierarchies and caches. Perform experiments in cache performance analysis. Influence of technology trends, such as Moore\u2019s law, on processor implementation. Approaches for exploiting instruction level parallelism, such as VLIW. Introduction to parallel and multicore architectures. Introduction to processor architectures targeted for embedded applications.\n Cross-list: ELEC 425.", 
    "cid": "COMP425", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "COMPUTER SYSTEMS ARCHITECTURE"
  }, 
  "COMP422": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Fundamentals of parallel computing including abstract models for parallel computation, parallel computer architectures, parallel algorithms, and data structures, programming models and methods, mapping and scheduling computation, analyzing computations for correctness and efficiency, and applications to science and engineering.  Includes an extensive programming component. ", 
    "cid": "COMP422", 
    "minUnits": 4, 
    "prereqs": [
      "COMP215", 
      "COMP221"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "INTRODUCTION TO PARALLEL COMPUTING"
  }, 
  "COMP446": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "As connected smartphones and tablets such as the iPhone and iPad become more popular, updated programming models and design concepts are required to take advantage of their capabilities. COMP/ELEC 446 will consider programming models including natively running applications, web services and mobile tailored web pages. We will explore applications primarily on the Apple iPhone, iPod and iPad but will briefly cover Google Android and Microsoft Windows Phone. We will also briefly touch on the development of web services to support mobile applications. The course culminates with a large project taking up most of the second half of the semester. Curriculum centers around and teaches iOS and code (iPhone/iPad); however final projects may also be completed in any major mobile system if the student has a foundation in Eclipse (Android) or Visual Studio (WP). Cross-list: ELEC 446. Recommended Prerequisite(s): COMP 215 or prior Object Oriented Programming experience. ", 
    "cid": "COMP446", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "MOBILE DEVICE APPLICATIONS"
  }, 
  "COMP421": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Introduction to the design, construction, and analysis of concurrent programs with an emphasis on operating systems, including filing systems, schedulers, and memory allocators. Specific attention is devoted to process synchronization and communication within concurrent programs. Cross-list: ELEC 421.", 
    "cid": "COMP421", 
    "minUnits": 4, 
    "prereqs": [
      "COMP215", 
      "COMP221"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "OPERATING SYSTEMS AND CONCURRENT PROGRAMMING"
  }, 
  "COMP200": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Broad introduction to major topics in computer science. Includes algorithms, mathematical models of computation, machine organization and design, programming languages, communication, and artificial intelligence. This course is intended for majors outside of Science and Engineering. ", 
    "cid": "COMP200", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "ELEMENTS OF COMPUTER SCIENCE"
  }, 
  "COMP326": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Study of gates, flip-flops, combinational and sequential switching circuits, registers, logical and arithmetic operations, introduction to the Verilog hardware description language. Cross-list: ELEC 326.", 
    "cid": "COMP326", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "DIGITAL LOGIC DESIGN"
  }, 
  "COMP460": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This project-based class involves teams of 2-4 CS and Visual Arts students designing and building computer games suitable for Xbox Live Arcade using C# and XNA. For CS students, Comp 160 or Comp 360 is recommended as a prerequisite. For Visual Arts students, previous experience in drawing using Photoshop is suggested. Cross-list: ARTS 460.", 
    "cid": "COMP460", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "ADVANCED COMPUTER GAME CREATION"
  }, 
  "COMP429": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Network architectures, algorithms, and protocols. Local- and Wide-area networking. Intra- and inter-domain routing. Transmission reliability. Flow and congestion control. TCP/IP. Multicast. Quality of Service. Network Security - Networked applications. Cross-list: ELEC 429.", 
    "cid": "COMP429", 
    "minUnits": 4, 
    "prereqs": [
      "COMP221"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "INTRODUCTION TO COMPUTER NETWORKS"
  }, 
  "COMP538": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "The course covers wide range of topics pertaining to security of Hardware Embedded system, including cryptographic processors, secure memory access, hardware IT protection by monitoring and watermarking FPGA security, physical and side-charmed attacks, Trojan horses. Cross-list: ELEC 528.", 
    "cid": "COMP538", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "SECURITY OF HW EMBEDDED SYSTEMS"
  }, 
  "COMP507": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This course is a graduate-level introduction to computer-aided program design, a field that studies logical and algorithmic techniques for formally verifying programs, and mechanized derivation of programs that are correct by construction. Topics covered will include classical automated program verification in particular abstract interpretation and model checking - as well as recent developments in algorithmic program synthesis. ", 
    "cid": "COMP507", 
    "minUnits": 4, 
    "prereqs": [
      "COMP481", 
      "COMP482"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "COMPUTER-AIDED PROGRAM DESIGN"
  }, 
  "COMP409": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Set theoretical concepts.  Propositional and first-order logic.  Soundness and completeness, incompleteness, undecidability.  Logical issues in computer science. ", 
    "cid": "COMP409", 
    "minUnits": 3, 
    "prereqs": [
      "COMP215", 
      "COMP182"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "ADVANCED LOGIC IN COMPUTER SCIENCE"
  }, 
  "COMP502": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Review of major neural machine learning (Artificial Neural Network) paradigms. Analytical discussion of supervised and unsupervised neural learning algorithms and their relation to information theoretical methods. Practical applications to data analysis such as pattern recognition, clustering, classification, function approximation/regression, non-linear PCA, projection pursuit, independent component analysis, with lots of examples from image and digital processings. Details are posted at www.ece.rice.edu/~erzsebet/ANNcourse.html. Cross-list: ELEC 502, STAT 502. Pre-requisite: ELEC 430 and ELEC 431 or equivalent or permission of instructor.", 
    "cid": "COMP502", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "NEURAL MACHINE LEARNING I"
  }, 
  "COMP404": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Discover how stat-of-the-art object-orient programming and design techniques can create globe-spanning software systems that are both flexible and scalable. Learn how software design patterns are used in multiple programming paradigms. Explore highly decoupled systems with dynamically configurable behaviors. Highly recommended for anyone interested in building large systems and software engineering. Basic proficiency in Java is required. Students may not receive credit for both COMP 310/510 and COMP 404. ", 
    "cid": "COMP404", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "GRADUATE OBJECT-ORIENTED PROGRAMMING AND DESIGN"
  }, 
  "COMP360": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "2D graphics techniques including fast line and curve drawing and polygon filling.  3D graphics problems including representation of solids, shading, and hidden surface elimination.  Fractals, graphics standards. ", 
    "cid": "COMP360", 
    "minUnits": 4, 
    "prereqs": [
      "COMP221", 
      "COMP182", 
      "COMP215"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "COMPUTER GRAPHICS"
  }, 
  "COMP509": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Set theoretical concepts. Propositional and first-order logic. Soundness and completeness, incompleteness, undecidability. Logical issues in computer science. A final project is required. ", 
    "cid": "COMP509", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "ADVANCED LOGIC IN COMPUTER SCIENCE"
  }, 
  "COMP529": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Graduate level course on the study of protocols and systems for wide-area inter-networks with an emphasis on the challenges presented by the scale and complexity of the Internet. Topics include network architecture, router design, intra- and inter- domain routing, multicast services, congestion control, quality of service, network security, active and overlay network, network management. Cross-list: ELEC 529.", 
    "cid": "COMP529", 
    "minUnits": 4, 
    "prereqs": [
      "COMP429"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "COMPUTER NETWORK PROTOCOLS AND SYSTEMS"
  }, 
  "COMP402": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This course focuses on the principles and practices of test-driven software development, which have been popularized under the banner of \"Extreme Programming.\" To provide students with practical experience, the course engages students in the development of open source production programs written in JAVA or C#. The DRJAVA programming courses was developed by students in this course.  Some of the major topics covered in course lectures include design patterns for controlling concurrency and refactoring transformations to improve legacy code. ", 
    "cid": "COMP402", 
    "minUnits": 4, 
    "prereqs": [
      "COMP310"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "PRODUCTION PROGRAMMING"
  }, 
  "COMP540": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "COMP 540 is about learning models from data. The course is designed to give students a foundational understanding of modern algorithms in learning and data mining, as well as hands-on experience with its applications in science and engineering. ", 
    "cid": "COMP540", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "STATISTICAL MACHINE LEARNING"
  }, 
  "COMP486": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "This course focuses on functional imaging modalities used specifically in nuclear medicine such as Gamma cameras, SPECT, and PET imaging. The course will introduce the basic principles of image acquisition, formation, processing and the clinical applications of these imaging modalities and lays the foundations for understanding the principles of radiotracer kinetic modeling. A trip to a clinical site in also planned to gain experience with nuclear medicine imaging. Cross-list: BIOE 486, ELEC 486.", 
    "cid": "COMP486", 
    "minUnits": 3, 
    "prereqs": [
      "COMP485"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "FUNDAMENTALS OF MEDICAL IMAGING II"
  }, 
  "COMP528": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Fundamental topics in performance analysis of computer systems: workload, characterization, measurement techniques, probability and statistics, experimental design, simulation, and analytical modeling. These techniques will be used to understand the performance of computer systems, serial and parallel programs, networks and client-server computing. Assignments will focus on applying these techniques in practice. ", 
    "cid": "COMP528", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "COMPUTER  SYSTEMS PERFORMANCE ANALYSIS"
  }, 
  "COMP481": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Finite automata, regular expressions, regular languages, pushdown automata, context-free languages, Turing machines, recursive languages, computability, and solvability. It is strongly recommended that students complete three semesters of Mathematics before enrolling in this course. ", 
    "cid": "COMP481", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "AUTOMATA, FORMAL LANGUAGES, AND COMPUTABILITY"
  }, 
  "COMP482": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Methods for designing and analyzing computer algorithms and data structures.  The focus of this course will be on the theoretical and mathematical aspects of algorithms and data structures. Cross-list: ELEC 420.", 
    "cid": "COMP482", 
    "minUnits": 3, 
    "prereqs": [
      "COMP182"
    ], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "DESIGN AND ANALYSIS OF ALGORITHMS"
  }, 
  "COMP560": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "A survey of core topics in Computer Graphics and Geometric Modeling, including fractals, ray tracing, hidden surface Algorithmic, Bezier, B-spline, blossoming techniques and subdivision procedures. ", 
    "cid": "COMP560", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "COMPUTER GRAPHICS AND GEOMETRIC MODELING"
  }, 
  "COMP607": {
    "py/object": "__main__.Course", 
    "maxUnits": 1, 
    "description": "Methods, tools and theories for the computer-aided verification of concurrent systems. ", 
    "cid": "COMP607", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "AUTOMATED PROGRAM VERIFICATION"
  }, 
  "COMP322": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Fundamentals of parallel programming: abstract models of parallel computers, parallel algorithms and data structures, and common parallel programming patterns including task parallelism, undirected and directed synchronization, data parallelism, divide-and-conquer parallelism, and map-reduce. Laboratory assignments will explore these topics through the use of parallel extensions to the Java language. Cross-list: ELEC 323.", 
    "cid": "COMP322", 
    "minUnits": 4, 
    "prereqs": [
      "COMP215"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "PRINCIPLES OF PARALLEL PROGRAMMING"
  }, 
  "COMP602": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Advanced topics in ANN theories, with a focus on Self-Organizing Maps and unsupervised learning. The course will be a mix of lectures and seminar discussions with active student participation, based on most recent research publications. Students will have access to professional software environment to implement theories. Cross-list: ELEC 602.", 
    "cid": "COMP602", 
    "minUnits": 3, 
    "prereqs": [
      "COMP502"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "NEURAL MACHINE LEARNING AND DATA MINING II"
  }, 
  "COMP526": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Design of high performance computer systems, including shared-memory and message-passing multiprocessors and vector systems. Hardware and software techniques to tolerate and reduce memory and communication latency. Case studies and performance simulation of high-performance systems. Cross-list: ELEC 526.", 
    "cid": "COMP526", 
    "minUnits": 3, 
    "prereqs": [
      "COMP425"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "HIGH PERFORMANCE COMPUTER ARCHITECTURE"
  }, 
  "COMP600": {
    "py/object": "__main__.Course", 
    "maxUnits": 1, 
    "description": "This seminar course meets weekly to discuss current research results by graduate students in the Computer Science Department. Senior students are expected to present their results. ", 
    "cid": "COMP600", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "GRADUATE SEMINAR IN COMPUTER SCIENCE"
  }, 
  "COMP524": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Study of network protocols for mobile and wireless networking, particularly at the media access control, network, and transport protocol layers. Focus is on the unique problems and challenges presented by the properties of wireless transmission and host or router mobility. Cross-list: ELEC 524. Recommended Prerequisite(s): COMP 421 OR ELEC 421.", 
    "cid": "COMP524", 
    "minUnits": 3, 
    "prereqs": [
      "COMP429"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "MOBILE AND WIRELESS NETWORKING"
  }, 
  "COMP485": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "This course will introduce basic principles of image acquisition, formation and processing of several medical imaging modalities such as X-Ray, CT, MRI, and US that are used to evaluate the human anatomy. The course also includes visits to a clinical site to gain experience with the various imaging modalities covered in class. Cross-list: BIOE 485, ELEC 485. Recommended Prerequisite(s): MATH 211 and MATH 212.", 
    "cid": "COMP485", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "FUNDAMENTALS OF MEDICAL IMAGING I"
  }, 
  "COMP491": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "A combination of in-service teaching and a seminar.   ", 
    "cid": "COMP491", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "COMPUTER SCIENCE TEACHING"
  }, 
  "COMP100": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "An introduction to organizing, analyzing, and presenting information using databases and spreadsheets. no programming involved, and no computing background expected. ", 
    "cid": "COMP100", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "INTRODUCTION TO COMPUTING AND INFORMATION SYSTEMS"
  }, 
  "COMP490": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Theoretical and experimental investigation under staff direction. ", 
    "cid": "COMP490", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "COMPUTER SCIENCE PROJECTS"
  }, 
  "COMP522": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Multi-core microprocessors are becoming the norm. The course will focus on emerging multi-core processor architectures and challenges to using them effectively. Topics include multi-core microcompressors, memory hierarchy, synchronization, programming systems, scheduling, and transactional memory. ", 
    "cid": "COMP522", 
    "minUnits": 3, 
    "prereqs": [
      "COMP221", 
      "COMP425"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "MULTI-CORE COMPUTING"
  }, 
  "COMP327": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "This elective course covers a wide variety of topics in computer security, including hands-on experience with breaking software and engineering software to be harder to break. For example, students will perform buffer overflow attacks and exploit web application vulnerabilities, while also learning how to defend against them. Grades will be based on a series of in-class projects. ", 
    "cid": "COMP327", 
    "minUnits": 3, 
    "prereqs": [
      "COMP310"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "INTRODUCTION TO COMPUTER SECURITY"
  }, 
  "COMP310": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Discover how state-of-the-art object-orient programming and design techniques can create globe-spanning software systems that are both flexible and scalable. Learn how software design patterns are used in multiple programming paradigms. Explore highly decoupled systems with dynamically configurable behaviors. Highly recommended for anyone interested in building large systems and software engineering. Graduate/Undergraduate Equivalency: COMP 510.", 
    "cid": "COMP310", 
    "minUnits": 4, 
    "prereqs": [
      "COMP215"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "ADVANCED OBJECT - ORIENTED PROGRAMMING AND DESIGN"
  }, 
  "COMP450": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Robots have fascinated people for generations. Today, robots are built for applications as diverse as exploring remote planets, de-mining war zones, cleaning toxic waste, assembling cars, inspecting pipes in industrial plants and mowing lawns. Robots are also interacting with humans in a variety of ways: robots are museum guides, robots assist surgeon sin life threatening operations, and robotic cars can drive us around. The field of robotics studies not only the design of new mechanisms but also the development of artificial intelligence frameworks to make these mechanism useful in the physical world, integrating computer science, engineering, mathematics and more recently biology and sociology, in a unique way. This class will present fundamental algorithmic advances that enable today\u2019s robots to move in real environments and plan their actions. It will also explore fundamentals of the field of Artificial Intelligence through the prism of robotics. The class involves a significant programming project. Cross-list: ELEC 450, MECH 450.", 
    "cid": "COMP450", 
    "minUnits": 4, 
    "prereqs": [
      "COMP215", 
      "COMP221"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "ALGORITHMIC ROBOTICS"
  }, 
  "COMP140": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "An integrated introduction to computation taught by solving real-world problems in audio, video and text processing, physical robotics, control and simulation of complex systems in nature, and swarm intelligence. Technical topics include how to model computational artifacts operating in the world; how to design and implement algorithmic solutions in Python; and how to experimentally test and evaluate performance of computational systems. Open to first-year students. ", 
    "cid": "COMP140", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "COMPUTATIONAL THINKING"
  }, 
  "COMP370": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Large accessible data sets have opened new frontiers in evolutionary biology, and many fields. Learn to write computer programs to test hypotheses and discover patterns in diverse data. Understand the most common strategies in evolutionary bioinformatics, including dynamic programming, hidden Markov models, and graphical algorithms. No previous programming experience required. Cross-list: EBIO 333. Recommended Prerequisite(s): MATH 101 and MATH 102.", 
    "cid": "COMP370", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "EVOLUTIONARY BIOINFORMATICS"
  }, 
  "COMP382": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Writing algorithms is fun, but how are you sure that the algorithm you wrote is flawless? Are there computing tasks for which it is impossible to produce an efficient algorithm, or, for that matter, any algorithm? To answer these questions, you have to learn to perform mathematical reasoning about algorithmic problems and solutions COMP 382 is an introduction to such reasoning techniques. Topics covered would include elementary logic, analysis of the correctness and efficiency of algorithms, and formal computational models like finite automata and Turning machines. On the way, you are also going to learn some new algorithm design techniques. ", 
    "cid": "COMP382", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "REASONING ABOUT ALGORITHMS"
  }, 
  "COMP215": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This course covers the principles of programming and program design. The course is organized around a number of individual programming assignments that fit together to complete a significant, real-world application. Each assignment emphasizes one or more of the basic principles of software design, including: encapsulation, abstraction, test-driven development, and functional and object-oriented programming. The Java programming language will be used. An introduction tot he basics of the Java language itself (including Java syntax and semantics) will be provided. ", 
    "cid": "COMP215", 
    "minUnits": 4, 
    "prereqs": [
      "COMP182"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "INTRODUCTION TO PROGRAM DESIGN"
  }, 
  "COMP651": {
    "py/object": "__main__.Course", 
    "maxUnits": 9, 
    "description": "SPRING 2013 - SPECIAL TOPICS IN ROBOTICS\nRobot Navigation and Multi-Robot Systems - This seminar will explore important topics in robot navigation and multi-robot systems. Students will read, present, and discuss research papers covering the relevant topics. The instructor will give background lectures where appropriate. Topics will include: outdoor navigation, vision-based navigation, multi-robot manipulation, network\nconfiguration estimation. Students will be responsible for: reading papers, writing one-paragraph paper summaries, presenting to the class, and periodically solving analysis problems assigned by the instructor.\n ", 
    "cid": "COMP651", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "SPECIAL TOPICS"
  }, 
  "COMP590": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Advanced theoretical and experimental investigations under staff direction. ", 
    "cid": "COMP590", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "COMPUTER SCIENCE PROJECTS"
  }, 
  "COMP182": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Algorithms are the engines of a great majority of systems, natural and artificial alike. This course introduces algorithmic thinking as a discipline for reasoning about systems, taming their complexities, and elucidating their properties. Algorithmic techniques, along with their correctness and efficiency, will be taught through reasoning about systems of interactions, such as markets, that are ubiquitous in our highly connected world. ", 
    "cid": "COMP182", 
    "minUnits": 4, 
    "prereqs": [
      "COMP140"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "ALGORITHMIC THINKING"
  }, 
  "COMP512": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Advanced topics in the design of an optimizing compiler. This course will focus on analysis and optimization of programs for uniprocessor machines, including program analysis (data-flow analysis, construction of static single-assignment form) and program transformation (redundancies, constant values, strength reduction, etc.). The course uses a variety of readings from the literature and includes an implementation project.  Recommended Prerequisite:  COMP 412.", 
    "cid": "COMP512", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "ADVANCED COMPILER CONSTRUCTION"
  }, 
  "COMP513": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "A modern computer is a system with enormous complexity in both software and hardware. The course presents the principles for managing such complexity using examples from modern computing systems. It covers emergent issues from system complexity such as energy efficiency, bug finding, and heterogeneous hardware. It also covers designing experiments and writing systems papers. The course consists of lectures, student presentation of classic papers, and a final project. Cross-list: ELEC 513.", 
    "cid": "COMP513", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "COMPLEXITY IN MODERN SYSTEMS"
  }, 
  "COMP516": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This is a project-based class that provides students with the opportunity to apply their knowledge of distributed computing principles to designed and develop a single, large distributed application that utilizes the public cloud. Students will learn about the basic services for computing, storage, and commination that are supported by the new generation of \"public utilities\" that provide the infrastructure for the public cloud, and how to utilize these services to engineer a robust, scalable application. ", 
    "cid": "COMP516", 
    "minUnits": 4, 
    "prereqs": [
      "COMP413"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "CLOUD COMPUTING PRACTICUM"
  }, 
  "COMP290": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Theoretical and experimental investigations under staff direction. Credit cannot be received for both COMP 290 and COMP 390. ", 
    "cid": "COMP290", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "COMPUTER SCIENCE PROJECTS"
  }, 
  "COMP515": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Advanced compilation techniques for vector and parallel computer systems, including the analysis of program dependence, program transformations to enhance parallelism, compiler management of the memory hierarchy, interprocedural data flow analysis, and parallel debugging.  Recommended Prerequisite:  COMP 412.", 
    "cid": "COMP515", 
    "minUnits": 3, 
    "prereqs": [
      "COMP412"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "ADVANCED COMPILATION FOR VECTOR PARALLEL PROCESSORS"
  }, 
  "COMP690": {
    "py/object": "__main__.Course", 
    "maxUnits": 12, 
    "description": " ", 
    "cid": "COMP690", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "RESEARCH AND THESIS"
  }, 
  "COMP693": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "This course is a discussion based seminar about state of the art embedded and digital signal processing systems, with emphasis on both hardware architectures as well as software tools, programming models, and compilers. The seminar focuses on state of the art academic and commercial offerings in these areas. Cross-list: ELEC 693.", 
    "cid": "COMP693", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "ADVANCED TOPICS-COMPUTER SYSTEMS"
  }, 
  "COMP160": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This class covers the basics of Python Programming with a focus on building simple games in a web-based environment. The class includes an introduction to event-driven programming and trains the students in the specifics of a Python GUI system designed to support creating to support creating applications that run in a web browser.  Java Experience.", 
    "cid": "COMP160", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "INTRODUCTION TO GAME PROGRAMMING IN PYTHON"
  }, 
  "COMP413": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This course focuses on modern principles for the construction of distributed programs, with an emphasis on design patterns, modern programming tools, and distributed object systems.  The material will be applied in a substantial software design/construction project. ", 
    "cid": "COMP413", 
    "minUnits": 4, 
    "prereqs": [
      "COMP310"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "DISTRIBUTED PROGRAM CONSTRUCTION"
  }, 
  "COMP694": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Survey of the component and standards trends that are the basis of personal computers and digital appliances with the aim of predicting technologies, solutions, and new products five years into the future.  Examples of these technologies are dual Core processors, iPods and their evolution, mobile wireless data devices, and even Google vs. Microsoft. Students will each pick a topic important to the digital lifestyle and through a series of one-on-one sessions develop a depth of understanding that is presented to the class. Cross-list: ELEC 694.", 
    "cid": "COMP694", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "FUTURE PERSONAL COMPUTING TECHNOLOGIES"
  }, 
  "COMP411": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "The design, definition and abstract implementation of programming languages including methods for precisely specifying syntax and semantics. ", 
    "cid": "COMP411", 
    "minUnits": 4, 
    "prereqs": [
      "COMP310"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "PRINCIPLES OF PROGRAMMING LANGUAGE"
  }, 
  "COMP410": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "COMP 410 is a pure discovery-based learning course designed to give students real-life, hands-on training in a wide variety of software engineering issues that arise in creating large-scale, state-of-the-art software systems. The class forms a small software development \"company\" that works to deliver a product to a customer.  The topics encountered include and are not limited to, dealing with new technologies (e.g. C#, .NET, distributed computing), advanced object-oriented programming and design, interacting with customers, problem specification and tasking, individual and group communications, human resource management, group leadership, testing, integration and documentation.  Traditional development cycle methodologies will be compared to recent, \"agile\" techniques. ", 
    "cid": "COMP410", 
    "minUnits": 4, 
    "prereqs": [
      "COMP310"
    ], 
    "semesters": [
      "Fall"
    ], 
    "name": "SOFTWARE ENGINEERING METHODOLOGY"
  }, 
  "COMP800": {
    "py/object": "__main__.Course", 
    "maxUnits": 15, 
    "description": " ", 
    "cid": "COMP800", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "GRADUATE RESEARCH"
  }, 
  "COMP430": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "Query Introduction to relational database systems, SQL programming, Database application programming, and Database design. ", 
    "cid": "COMP430", 
    "minUnits": 4, 
    "prereqs": [
      "COMP182", 
      "COMP215"
    ], 
    "semesters": [
      "Spr"
    ], 
    "name": "INTRODUCTION TO DATABASE SYSTEMS"
  }, 
  "COMP571": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Pairwise and multiple sequence alignment, Markov chains and HMMs, Phylogenetic reconstruction, Haplotype inference, Computational models of RNA structure, Gene finding, Genome rearrangements, and comparative genomics. Cross-list: BIOC 571.", 
    "cid": "COMP571", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "BIOINFORMATICS: SEQUENCE ANALYSIS"
  }, 
  "COMP572": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "This course covers computational aspects of biological network analysis, a major theme in the area of systems biology. The course addresses protein-protein interaction networks, signaling, and metabolic networks, and covers issues related to reconstructing, analyzing, and integrating various types of networks. Cross-list: BIOC 572, BIOE 564.", 
    "cid": "COMP572", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "BIOINFORMATICS: NETWORK ANALYSIS"
  }, 
  "COMP573": {
    "py/object": "__main__.Course", 
    "maxUnits": 1, 
    "description": "This seminar introduces pre- and postdoctoral students in biomedical informatics to topics relevant to professional development in the discipline, which is no longer concentrated in labs as it was in its early days, but is now important in hospitals, outpatient clinics, companies and even the community. In these settings, researchers and practitioners are likely to encounter not only difficult technical challenges, but vexing problems of organizational change and development as well. We will consider some of these challenges, drawing on the insights of experts in psychology, organizational change, management and communications along with industry representatives and entrepreneurs. The seminar mixes lectures and readings with group and individual exercises. ", 
    "cid": "COMP573", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "PROFESSIONAL DEVELOPMENT FOR BIOMEDICAL INFORMATICS"
  }, 
  "COMP390": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Theoretical and experimental investigations under staff direction. Credit cannot be received for both COMP 290 and COMP 390. ", 
    "cid": "COMP390", 
    "minUnits": 1, 
    "prereqs": [], 
    "semesters": [
      "Fall", 
      "Spr"
    ], 
    "name": "COMPUTER SCIENCE PROJECTS"
  }, 
  "COMP551": {
    "py/object": "__main__.Course", 
    "maxUnits": 4, 
    "description": "This course will introduce the key concepts of modern robotics. The course will cover sensing, state estimation, localization, basic motion planning, and multi-robot coordination. The course will have a large laboratory component, with lectures to cover important concepts. There will be considerable software development in C, familiarity with programming is required.  The course will be self-contained, there are no prerequisites, and advanced undergraduates and new graduate students are encouraged to enroll.  Lab times will be arranged in the first week of class. ", 
    "cid": "COMP551", 
    "minUnits": 4, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "ADVANCED MOBILE ROBOTICS"
  }, 
  "COMP162": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Explore how modern game content is created, and how it interacts with the underlying technology. Beginning with an explanation of how games are developed and what role content plays in the process, the class will learn to use 3D Studio Max, Photoshop, and game-native scripting as they create working content for an established game project. ", 
    "cid": "COMP162", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Fall"
    ], 
    "name": "INTRODUCTION TO GAME CONTENT CREATION"
  }, 
  "COMP498": {
    "py/object": "__main__.Course", 
    "maxUnits": 3, 
    "description": "Introduction to the kinematics, dynamics, and control of robot manipulators and to applications of artificial intelligence and computer vision in robotics. Cross-list: ELEC 498, MECH 498.", 
    "cid": "COMP498", 
    "minUnits": 3, 
    "prereqs": [], 
    "semesters": [
      "Spr"
    ], 
    "name": "INTRODUCTION TO ROBOTICS"
  }
}
